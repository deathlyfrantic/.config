local stub = require("luassert.stub")
local commandline = require("z.commandline")

describe("commandline", function()
  local getcmdline, getcmdpos, setcmdpos

  before_each(function()
    getcmdline = stub(vim.fn, "getcmdline")
    getcmdpos = stub(vim.fn, "getcmdpos")
    setcmdpos = stub(vim.fn, "setcmdpos")
  end)

  after_each(function()
    getcmdline:revert()
    getcmdpos:revert()
    setcmdpos:revert()
  end)

  describe("kill_line", function()
    it("returns empty string if cursor is in first column", function()
      getcmdpos.returns(1)
      assert.equals(commandline.kill_line(), "")
    end)

    it(
      "returns first portion of command line if cursor is not in first column",
      function()
        getcmdpos.returns(6)
        getcmdline.returns("foo bar baz")
        assert.equals(commandline.kill_line(), "foo b")
      end
    )

    it("returns empty string if command line is empty", function()
      getcmdpos.returns(1)
      getcmdline.returns("")
      assert.equals(commandline.kill_line(), "")
    end)
  end)

  describe("delete_word", function()
    it("works when cursor is in first column", function()
      getcmdpos.returns(1)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.delete_word(), " bar baz")
    end)

    it("works when cursor is not in first column", function()
      getcmdpos.returns(4)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.delete_word(), "foo baz")
    end)

    it("works when command line is empty", function()
      getcmdpos.returns(1)
      getcmdline.returns("")
      assert.equals(commandline.delete_word(), "")
    end)

    it("works when cursor is at end of command line", function()
      getcmdpos.returns(12)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.delete_word(), "foo bar baz")
    end)

    it("works when cursor is in the middle of a word", function()
      getcmdpos.returns(4)
      getcmdline.returns("foobar")
      assert.equals(commandline.delete_word(), "foo")
    end)
  end)

  describe("bwd_by_word", function()
    it("does nothing when cursor is in first column", function()
      getcmdpos.returns(1)
      getcmdline.returns("foobar")
      assert.equals(commandline.bwd_by_word(), "foobar")
      assert.stub(setcmdpos).not_called()
    end)

    it("calls setcmdpos() as necessary to set cursor position", function()
      getcmdpos.returns(8)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.bwd_by_word(), "foo bar baz")
      assert.stub(setcmdpos).called_with(7)
      assert.stub(setcmdpos).called_with(6)
      assert.stub(setcmdpos).called_with(5)
    end)

    it("works when cursor is at end of command line", function()
      getcmdpos.returns(12)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.bwd_by_word(), "foo bar baz")
      assert.stub(setcmdpos).called_with(11)
      assert.stub(setcmdpos).called_with(10)
      assert.stub(setcmdpos).called_with(9)
    end)

    it("works when cursor is in the middle of a word", function()
      getcmdpos.returns(11)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.bwd_by_word(), "foo bar baz")
      assert.stub(setcmdpos).called_with(10)
      assert.stub(setcmdpos).called_with(9)
    end)

    it("works when there is a space character before cursor", function()
      getcmdpos.returns(9)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.bwd_by_word(), "foo bar baz")
      assert.stub(setcmdpos).called_with(8)
      assert.stub(setcmdpos).called_with(7)
      assert.stub(setcmdpos).called_with(6)
      assert.stub(setcmdpos).called_with(5)
    end)
  end)

  describe("fwd_by_word", function()
    it("does nothing when cursor is in last column", function()
      getcmdpos.returns(7)
      getcmdline.returns("foobar")
      assert.equals(commandline.fwd_by_word(), "foobar")
      assert.stub(setcmdpos).not_called()
    end)

    it("calls setcmdpos() as necessary to set cursor position", function()
      getcmdpos.returns(4)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.fwd_by_word(), "foo bar baz")
      assert.stub(setcmdpos).called_with(6)
      assert.stub(setcmdpos).called_with(7)
      assert.stub(setcmdpos).called_with(8)
    end)

    it("works when cursor is at beginning of command line", function()
      getcmdpos.returns(1)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.fwd_by_word(), "foo bar baz")
      assert.stub(setcmdpos).called_with(3)
      assert.stub(setcmdpos).called_with(4)
    end)

    it("works when cursor is in the middle of a word", function()
      getcmdpos.returns(2)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.fwd_by_word(), "foo bar baz")
      assert.stub(setcmdpos).called_with(4)
    end)

    it("works when there is a space character after cursor", function()
      getcmdpos.returns(4)
      getcmdline.returns("foo bar baz")
      assert.equals(commandline.fwd_by_word(), "foo bar baz")
      assert.stub(setcmdpos).called_with(5)
      assert.stub(setcmdpos).called_with(6)
      assert.stub(setcmdpos).called_with(7)
      assert.stub(setcmdpos).called_with(8)
    end)
  end)
end)
