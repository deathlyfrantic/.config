[user]
    email = zandrmartin@gmail.com
    name = Zandr Martin
[core]
    editor = nvim
    autocrlf = input
    hooksPath = ~/.config/git/hooks
[merge]
    conflictstyle = diff3
    tool = vimdiff
[mergetool]
    prompt = true
[mergetool "vimdiff"]
    cmd = nvim -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
[difftool]
    prompt = true
[difftool "vimdiff"]
    cmd = nvim -d $LOCAL $REMOTE -c '$wincmd w' -c 'wincmd J'
[transfer]
    fsckobjects = true
[fetch]
    fsckobjects = true
    prune = true
    pruneTags = true
[receive]
    fsckObjects = true
[diff]
    renames = true
    prompt = true
[alias]
    search = "!f() { git grep \"$@\" $(git rev-list --all); }; f"
    recent = "!git log -n 10 --color=always --graph --format='%C(yellow)%h^^^%Cred%d %Creset%s^^^%Cgreen(%ar)^^^%C(bold blue)%an%Creset' | column -s '^^^' -t"
    ctags = "!~/.config/git/hooks/make-ctags"
    delete-merged-branches = "!if [ \"$(git rev-parse --abbrev-ref HEAD)\" != \"main\" ]; then echo \"not on main branch\" && exit 1; fi; git branch --merged origin/main | grep -v '^\\* main$' | xargs git branch -d"
    filesearch = "!f() { ~/.config/git/filesearch \"$@\"; }; f"
    fixup = "!git commit --fixup=$(git log --oneline --no-merges -n 20 | star | cut -d' ' -f1)"
    unpushed = "log HEAD ^origin"
[commit]
    verbose = 1
[pull]
    rebase = false
[rebase]
    autosquash = true
[init]
    defaultBranch = main
